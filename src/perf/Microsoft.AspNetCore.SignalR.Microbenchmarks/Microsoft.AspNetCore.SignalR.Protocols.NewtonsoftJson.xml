<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions">
            <summary>
            Options used to configure a <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions.PayloadSerializerSettings">
            <summary>
            Gets or sets the settings used to serialize invocation arguments and return values.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol">
            <summary>
            Implements the SignalR Hub Protocol using Newtonsoft.Json.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.PayloadSerializer">
            <summary>
            Gets the serializer used to serialize invocation arguments and return values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol"/> class.
            </summary>
            <param name="options">The options used to initialize the protocol.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.Version">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.TransferFormat">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.IsVersionSupported(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.TryParseMessage(System.Buffers.ReadOnlySequence{System.Byte}@,Microsoft.AspNetCore.SignalR.IInvocationBinder,Microsoft.AspNetCore.SignalR.Protocol.HubMessage@)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.WriteMessage(Microsoft.AspNetCore.SignalR.Protocol.HubMessage,System.Buffers.IBufferWriter{System.Byte})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Protocol.NewtonsoftJsonHubProtocol.GetMessageBytes(Microsoft.AspNetCore.SignalR.Protocol.HubMessage)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Internal.MemoryBufferWriter.WrittenBuffers">
            <summary>
            Holds the written segments from a MemoryBufferWriter and is no longer attached to a MemoryBufferWriter.
            You are now responsible for calling Dispose on this type to return the memory to the pool.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Internal.MemoryBufferWriter.CompletedBuffer">
            <summary>
            Holds a byte[] from the pool and a size value. Basically a Memory but guaranteed to be backed by an ArrayPool byte[], so that we know we can return it.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.NewtonsoftJsonProtocolDependencyInjectionExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.NewtonsoftJsonProtocolDependencyInjectionExtensions.AddNewtonsoftJsonProtocol``1(``0)">
            <summary>
            Enables the JSON protocol for SignalR.
            </summary>
            <remarks>
            This has no effect if the JSON protocol has already been enabled.
            </remarks>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRBuilder"/> representing the SignalR server to add JSON protocol support to.</param>
            <returns>The value of <paramref name="builder"/></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.NewtonsoftJsonProtocolDependencyInjectionExtensions.AddNewtonsoftJsonProtocol``1(``0,System.Action{Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions})">
            <summary>
            Enables the JSON protocol for SignalR and allows options for the JSON protocol to be configured.
            </summary>
            <remarks>
            Any options configured here will be applied, even if the JSON protocol has already been registered with the server.
            </remarks>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRBuilder"/> representing the SignalR server to add JSON protocol support to.</param>
            <param name="configure">A delegate that can be used to configure the <see cref="T:Microsoft.AspNetCore.SignalR.NewtonsoftJsonHubProtocolOptions"/></param>
            <returns>The value of <paramref name="builder"/></returns>
        </member>
    </members>
</doc>
